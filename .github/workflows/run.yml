name: signals

on:
  schedule:
    - cron: "*/5 * * * *"     # every 5 minutes
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run self-tuner
        run: python tuner.py
        continue-on-error: true

      - name: Run signals
        env:
          TELEGRAM_BOT_TOKEN:     ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:       ${{ secrets.TELEGRAM_CHAT_PRO }}
          TELEGRAM_FREE_CHAT_ID:  ${{ secrets.TELEGRAM_CHAT_FREE }}
          TELEGRAM_STD_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_PRO }}
          TELEGRAM_PREM_CHAT_ID:  ${{ secrets.TELEGRAM_CHAT_VIP }}
          OANDA_API_KEY:          ${{ secrets.OANDA_API_KEY }}
          USE_OANDA:              "1"
          INTERVAL:               "5m"
          EXPIRY_MIN:             "10"
          MIN_SCORE:              "1"
          MUST_TRADE:             "1"
        run: python signals.py

      - name: Commit signal log
        run: |
          git config user.email "bot@users.noreply.github.com"
          git config user.name  "signals-bot"
          git add data/signals.csv data/free_queue.csv || true
          git commit -m "update signals $(date -u +'%F %T')" || echo "no changes"
          git push || echo "skip push (no changes)"

  evaluate:
    runs-on: ubuntu-latest
    needs: generate
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Evaluate outcomes
        run: python evaluate.py

      - name: Commit performance updates
        run: |
          git config user.email "bot@users.noreply.github.com"
          git config user.name  "signals-bot"
          git add data/*.csv || true
          git commit -m "evaluate outcomes $(date -u +'%F %T')" || echo "no changes"
          git push || echo "skip push (no changes)"
